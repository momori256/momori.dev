<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Webassembly on Momori Nakano</title>
    <link>http://localhost:1313/tags/webassembly/</link>
    <description>Recent content in Webassembly on Momori Nakano</description>
    <generator>Hugo -- 0.123.7</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/webassembly/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying a Rust WebAssembly (WASM) App to GitHub Pages</title>
      <link>http://localhost:1313/posts/deploying-a-rust-wasm-app-to-github-pages/</link>
      <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/deploying-a-rust-wasm-app-to-github-pages/</guid>
      <description>In this tutorial, we&amp;rsquo;ll guide you through the step-by-step process of deploying a Rust WebAssembly (WASM) app on GitHub Pages. The final website will consist of a JavaScript frontend that utilizes WASM, generated from Rust code.
The project we&amp;rsquo;ll use is called lp, a logical operation language that I created earlier. We won&amp;rsquo;t delve into the implementation details; instead, our focus will be on incorporating WASM into an existing Rust project.</description>
    </item>
  </channel>
</rss>
